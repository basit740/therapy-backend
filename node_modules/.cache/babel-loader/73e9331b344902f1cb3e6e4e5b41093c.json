{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/work/fiverr/2021/December/boulmpos/Backups/latest2/src/components/Dashboard/UtilityComponents/TagsManager/TagsManager.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classes from './TagsManager.module.css';\nimport Tag from '../../UI/Tag.js';\nimport uniqueId from 'lodash.uniqueid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TagsManager = props => {\n  _s();\n\n  const [tags, setTags] = useState(props.defaultTags);\n  const [selectedTags, setSelectedTags] = useState([]);\n  const [tagTitle, setTagTitle] = useState('');\n\n  const addToSelected = item => {\n    if (item.status === 'selected') {\n      setSelectedTags(prevTags => {\n        return [...prevTags, item];\n      });\n    } else {\n      let prevTags = selectedTags;\n      const filteredTags = prevTags.filter(tag => tag.id != item.id);\n      setSelectedTags(prev => {\n        return [filteredTags];\n      });\n    }\n\n    props.onSelectedTags(selectedTags);\n  };\n\n  const titleTagHandler = event => {\n    let value = event.currentTarget.value;\n    setTagTitle(value);\n  };\n\n  const newTagHandler = () => {\n    if (tagTitle.trim() === '') {\n      console.log('this happend');\n      return;\n    }\n\n    let newId = uniqueId();\n    const ITEM = {\n      id: newId,\n      title: tagTitle,\n      status: 'not_selected'\n    };\n    setTags(prevTags => {\n      return [...prevTags, ITEM];\n    });\n    setTagTitle('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes['tags-manager'],\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes['text-area-wrapper'],\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: classes['selectedArea'],\n        onChange: titleTagHandler,\n        value: tagTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes['add-button'],\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes['plus-icon'],\n          onClick: newTagHandler,\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        marginBottom: '0',\n        paddingBottom: '0'\n      },\n      children: props.instrucitons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes['selectedTextArea'],\n      children: tags.length > 0 ? tags.map((obj, i) => /*#__PURE__*/_jsxDEV(Tag, {\n        title: obj.title,\n        id: obj.id,\n        onClick: addToSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this);\n};\n\n_s(TagsManager, \"jI7AdApSTZlNhzythxzyZjtYLj0=\");\n\n_c = TagsManager;\nexport default TagsManager;\n\nvar _c;\n\n$RefreshReg$(_c, \"TagsManager\");","map":{"version":3,"sources":["/Users/apple/Documents/work/fiverr/2021/December/boulmpos/Backups/latest2/src/components/Dashboard/UtilityComponents/TagsManager/TagsManager.js"],"names":["React","useState","classes","Tag","uniqueId","TagsManager","props","tags","setTags","defaultTags","selectedTags","setSelectedTags","tagTitle","setTagTitle","addToSelected","item","status","prevTags","filteredTags","filter","tag","id","prev","onSelectedTags","titleTagHandler","event","value","currentTarget","newTagHandler","trim","console","log","newId","ITEM","title","marginBottom","paddingBottom","instrucitons","length","map","obj","i"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n\nimport classes from './TagsManager.module.css';\nimport Tag from '../../UI/Tag.js';\nimport uniqueId from 'lodash.uniqueid';\n\nconst TagsManager = (props) => {\n\tconst [tags, setTags] = useState(props.defaultTags);\n\tconst [selectedTags, setSelectedTags] = useState([]);\n\tconst [tagTitle, setTagTitle] = useState('');\n\n\tconst addToSelected = (item) => {\n\t\tif (item.status === 'selected') {\n\t\t\tsetSelectedTags((prevTags) => {\n\t\t\t\treturn [...prevTags, item];\n\t\t\t});\n\t\t} else {\n\t\t\tlet prevTags = selectedTags;\n\t\t\tconst filteredTags = prevTags.filter((tag) => tag.id != item.id);\n\t\t\tsetSelectedTags((prev) => {\n\t\t\t\treturn [filteredTags];\n\t\t\t});\n\t\t}\n\n\t\tprops.onSelectedTags(selectedTags);\n\t};\n\n\tconst titleTagHandler = (event) => {\n\t\tlet value = event.currentTarget.value;\n\t\tsetTagTitle(value);\n\t};\n\n\tconst newTagHandler = () => {\n\t\tif (tagTitle.trim() === '') {\n\t\t\tconsole.log('this happend');\n\t\t\treturn;\n\t\t}\n\t\tlet newId = uniqueId();\n\t\tconst ITEM = { id: newId, title: tagTitle, status: 'not_selected' };\n\t\tsetTags((prevTags) => {\n\t\t\treturn [...prevTags, ITEM];\n\t\t});\n\t\tsetTagTitle('');\n\t};\n\n\treturn (\n\t\t<div className={classes['tags-manager']}>\n\t\t\t<h4>{props.title}</h4>\n\t\t\t<div className={classes['text-area-wrapper']}>\n\t\t\t\t<textarea\n\t\t\t\t\tclassName={classes['selectedArea']}\n\t\t\t\t\tonChange={titleTagHandler}\n\t\t\t\t\tvalue={tagTitle}\n\t\t\t\t></textarea>\n\t\t\t\t<div className={classes['add-button']}>\n\t\t\t\t\t<div className={classes['plus-icon']} onClick={newTagHandler}>\n\t\t\t\t\t\t+\n\t\t\t\t\t</div>{' '}\n\t\t\t\t\t<div>Add</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<h4 style={{ marginBottom: '0', paddingBottom: '0' }}>\n\t\t\t\t{props.instrucitons}\n\t\t\t</h4>\n\n\t\t\t<div className={classes['selectedTextArea']}>\n\t\t\t\t{tags.length > 0 ? (\n\t\t\t\t\ttags.map((obj, i) => (\n\t\t\t\t\t\t<Tag title={obj.title} id={obj.id} onClick={addToSelected} />\n\t\t\t\t\t))\n\t\t\t\t) : (\n\t\t\t\t\t<div></div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TagsManager;\n"]},"metadata":{},"sourceType":"module"}