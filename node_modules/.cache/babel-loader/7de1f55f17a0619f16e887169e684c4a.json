{"ast":null,"code":"// feelings\nexport const createIssues = async (versionId, issues) => {\n  const response = await fetch(process.env.REACT_APP_API_URL + '/stepTwoIssues/' + versionId, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + localStorage.getItem('token')\n    },\n    body: JSON.stringify(issues)\n  });\n  return await response.json();\n};\nexport const getIssues = async versionId => {\n  const response = await fetch(process.env.REACT_APP_API_URL + '/stepTwoIssues/' + versionId, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      Authorization: 'Bearer ' + localStorage.getItem('token')\n    }\n  });\n  return await response.json();\n};","map":{"version":3,"sources":["/Users/apple/Documents/work/fiverr/2021/December/boulmpos/Backups/latest2/src/api/steptwo.js"],"names":["createIssues","versionId","issues","response","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","Authorization","localStorage","getItem","body","JSON","stringify","json","getIssues"],"mappings":"AAAA;AAEA,OAAO,MAAMA,YAAY,GAAG,OAAOC,SAAP,EAAkBC,MAAlB,KAA6B;AACxD,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC3BC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,iBAAhC,GAAoDN,SADzB,EAE3B;AACCO,IAAAA,MAAM,EAAE,MADT;AAECC,IAAAA,OAAO,EAAE;AACRC,MAAAA,MAAM,EAAE,kBADA;AAER,sBAAgB,kBAFR;AAGRC,MAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAHnB,KAFV;AAOCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,MAAf;AAPP,GAF2B,CAA5B;AAaA,SAAO,MAAMC,QAAQ,CAACc,IAAT,EAAb;AACA,CAfM;AAiBP,OAAO,MAAMC,SAAS,GAAG,MAAOjB,SAAP,IAAqB;AAC7C,QAAME,QAAQ,GAAG,MAAMC,KAAK,CAC3BC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,iBAAhC,GAAoDN,SADzB,EAE3B;AACCO,IAAAA,MAAM,EAAE,KADT;AAECC,IAAAA,OAAO,EAAE;AACRC,MAAAA,MAAM,EAAE,kBADA;AAER,sBAAgB,kBAFR;AAGRC,MAAAA,aAAa,EAAE,YAAYC,YAAY,CAACC,OAAb,CAAqB,OAArB;AAHnB;AAFV,GAF2B,CAA5B;AAYA,SAAO,MAAMV,QAAQ,CAACc,IAAT,EAAb;AACA,CAdM","sourcesContent":["// feelings\n\nexport const createIssues = async (versionId, issues) => {\n\tconst response = await fetch(\n\t\tprocess.env.REACT_APP_API_URL + '/stepTwoIssues/' + versionId,\n\t\t{\n\t\t\tmethod: 'POST',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: 'Bearer ' + localStorage.getItem('token'),\n\t\t\t},\n\t\t\tbody: JSON.stringify(issues),\n\t\t}\n\t);\n\n\treturn await response.json();\n};\n\nexport const getIssues = async (versionId) => {\n\tconst response = await fetch(\n\t\tprocess.env.REACT_APP_API_URL + '/stepTwoIssues/' + versionId,\n\t\t{\n\t\t\tmethod: 'GET',\n\t\t\theaders: {\n\t\t\t\tAccept: 'application/json',\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: 'Bearer ' + localStorage.getItem('token'),\n\t\t\t},\n\t\t}\n\t);\n\n\treturn await response.json();\n};\n"]},"metadata":{},"sourceType":"module"}