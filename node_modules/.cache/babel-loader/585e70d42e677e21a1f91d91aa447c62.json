{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/work/fiverr/2021/December/boulmpos/Backups/latest2/src/components/Dashboard/CreateNewVersion/StepSeven/ThoughtCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport './ThoughtCard.css';\nimport uniqueId from 'lodash.uniqueid';\nimport Thought from './Thought';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ThoughtCard = props => {\n  _s();\n\n  const [thoughtContent, setThoughtContent] = useState('');\n  const [isShown, setIsShown] = useState(false);\n  const [cardId, setCardId] = useState(props.id); //const [thoughts, setThoughts] = useState([]);\n\n  const [trigger, setTrigger] = useState(false);\n  const inputRef = useRef();\n\n  const thoughtContentHandler = event => {\n    setThoughtContent(event.target.value);\n  }; // const inputShowHideHandler = () => {\n  // \tsetIsShown(true);\n  // \tinputRef.current.focus();\n  // };\n\n\n  const submitHandler = event => {\n    //alert('something');\n    console.log(event.target.cardId);\n\n    if (trigger) {\n      setTrigger(false);\n    } else {\n      setTrigger(true);\n    }\n\n    event.preventDefault();\n    let newThought = {\n      id: 'thg_' + uniqueId(),\n      thgContent: thoughtContent,\n      cardId: props.id\n    };\n    props.onNewThought(newThought);\n    inputRef.current.innerHTML = '';\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"thought-card-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '1rem'\n      },\n      children: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: props.thoughts.length\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thougth-card\",\n      id: props.id,\n      onDrop: props.onDrop,\n      onDragOver: props.onDragOver,\n      children: [props.thoughts.map(thg => {\n        return /*#__PURE__*/_jsxDEV(Thought, {\n          draggable: \"true\",\n          onDragStart: props.onDragStart,\n          onDragEnd: props.onDragEnd,\n          thoughtContent: thg.thgContent,\n          id: thg.id,\n          onDelete: props.onDelete,\n          parentId: props.id\n        }, thg.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-button-thought\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"plus-icon\",\n          onClick: () => setIsShown(true),\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 6\n        }, this), ' ', /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), isShown && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: submitHandler,\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"describe your thought\",\n          onChange: thoughtContentHandler,\n          value: props.newThought,\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ThoughtCard, \"+wqBXNRqwpmD2qiDsu+hjloCSwU=\");\n\n_c = ThoughtCard;\nexport default ThoughtCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThoughtCard\");","map":{"version":3,"sources":["/Users/apple/Documents/work/fiverr/2021/December/boulmpos/Backups/latest2/src/components/Dashboard/CreateNewVersion/StepSeven/ThoughtCard.js"],"names":["React","useState","useRef","uniqueId","Thought","ThoughtCard","props","thoughtContent","setThoughtContent","isShown","setIsShown","cardId","setCardId","id","trigger","setTrigger","inputRef","thoughtContentHandler","event","target","value","submitHandler","console","log","preventDefault","newThought","thgContent","onNewThought","current","innerHTML","fontSize","title","thoughts","length","onDrop","onDragOver","map","thg","onDragStart","onDragEnd","onDelete"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,iBAArB;AAEA,OAAOC,OAAP,MAAoB,WAApB;;;AACA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACU,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAACK,KAAK,CAACO,EAAP,CAApC,CAH8B,CAI9B;;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMe,QAAQ,GAAGd,MAAM,EAAvB;;AAEA,QAAMe,qBAAqB,GAAIC,KAAD,IAAW;AACxCV,IAAAA,iBAAiB,CAACU,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAjB;AACA,GAFD,CAT8B,CAY9B;AACA;AACA;AACA;;;AAEA,QAAMC,aAAa,GAAIH,KAAD,IAAW;AAChC;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACC,MAAN,CAAaR,MAAzB;;AAEA,QAAIG,OAAJ,EAAa;AACZC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACA,KAFD,MAEO;AACNA,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA;;AACDG,IAAAA,KAAK,CAACM,cAAN;AACA,QAAIC,UAAU,GAAG;AAChBZ,MAAAA,EAAE,EAAE,SAASV,QAAQ,EADL;AAEhBuB,MAAAA,UAAU,EAAEnB,cAFI;AAGhBI,MAAAA,MAAM,EAAEL,KAAK,CAACO;AAHE,KAAjB;AAKAP,IAAAA,KAAK,CAACqB,YAAN,CAAmBF,UAAnB;AACAT,IAAAA,QAAQ,CAACY,OAAT,CAAiBC,SAAjB,GAA6B,EAA7B;AACA,GAjBD;;AAmBA,sBACC;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACC;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAZ;AAAA,gBAAmCxB,KAAK,CAACyB;AAAzC;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBAAOzB,KAAK,CAAC0B,QAAN,CAAeC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFD,eAGC;AACC,MAAA,SAAS,EAAC,cADX;AAEC,MAAA,EAAE,EAAE3B,KAAK,CAACO,EAFX;AAGC,MAAA,MAAM,EAAEP,KAAK,CAAC4B,MAHf;AAIC,MAAA,UAAU,EAAE5B,KAAK,CAAC6B,UAJnB;AAAA,iBAOE7B,KAAK,CAAC0B,QAAN,CAAeI,GAAf,CAAoBC,GAAD,IAAS;AAC5B,4BACC,QAAC,OAAD;AACC,UAAA,SAAS,EAAC,MADX;AAEC,UAAA,WAAW,EAAE/B,KAAK,CAACgC,WAFpB;AAGC,UAAA,SAAS,EAAEhC,KAAK,CAACiC,SAHlB;AAIC,UAAA,cAAc,EAAEF,GAAG,CAACX,UAJrB;AAMC,UAAA,EAAE,EAAEW,GAAG,CAACxB,EANT;AAOC,UAAA,QAAQ,EAAEP,KAAK,CAACkC,QAPjB;AAQC,UAAA,QAAQ,EAAElC,KAAK,CAACO;AARjB,WAKMwB,GAAG,CAACxB,EALV;AAAA;AAAA;AAAA;AAAA,gBADD;AAYA,OAbA,CAPF,eAqBC;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,gCACC;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,OAAO,EAAE,MAAMH,UAAU,CAAC,IAAD,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAGQ,GAHR,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cArBD,EA4BED,OAAO,iBACP;AAAM,QAAA,QAAQ,EAAEY,aAAhB;AAAA,+BACC;AACC,UAAA,IAAI,EAAC,MADN;AAEC,UAAA,WAAW,EAAC,uBAFb;AAGC,UAAA,QAAQ,EAAEJ,qBAHX;AAIC,UAAA,KAAK,EAAEX,KAAK,CAACmB,UAJd;AAKC,UAAA,GAAG,EAAET;AALN;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA8CA,CAlFD;;GAAMX,W;;KAAAA,W;AAoFN,eAAeA,WAAf","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './ThoughtCard.css';\nimport uniqueId from 'lodash.uniqueid';\n\nimport Thought from './Thought';\nconst ThoughtCard = (props) => {\n\tconst [thoughtContent, setThoughtContent] = useState('');\n\tconst [isShown, setIsShown] = useState(false);\n\tconst [cardId, setCardId] = useState(props.id);\n\t//const [thoughts, setThoughts] = useState([]);\n\tconst [trigger, setTrigger] = useState(false);\n\n\tconst inputRef = useRef();\n\n\tconst thoughtContentHandler = (event) => {\n\t\tsetThoughtContent(event.target.value);\n\t};\n\t// const inputShowHideHandler = () => {\n\t// \tsetIsShown(true);\n\t// \tinputRef.current.focus();\n\t// };\n\n\tconst submitHandler = (event) => {\n\t\t//alert('something');\n\t\tconsole.log(event.target.cardId);\n\n\t\tif (trigger) {\n\t\t\tsetTrigger(false);\n\t\t} else {\n\t\t\tsetTrigger(true);\n\t\t}\n\t\tevent.preventDefault();\n\t\tlet newThought = {\n\t\t\tid: 'thg_' + uniqueId(),\n\t\t\tthgContent: thoughtContent,\n\t\t\tcardId: props.id,\n\t\t};\n\t\tprops.onNewThought(newThought);\n\t\tinputRef.current.innerHTML = '';\n\t};\n\n\treturn (\n\t\t<div className='thought-card-container'>\n\t\t\t<div style={{ fontSize: '1rem' }}>{props.title}</div>\n\t\t\t<span>{props.thoughts.length}</span>\n\t\t\t<div\n\t\t\t\tclassName='thougth-card'\n\t\t\t\tid={props.id}\n\t\t\t\tonDrop={props.onDrop}\n\t\t\t\tonDragOver={props.onDragOver}\n\t\t\t>\n\t\t\t\t{/* all thoughtItems are */}\n\t\t\t\t{props.thoughts.map((thg) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Thought\n\t\t\t\t\t\t\tdraggable='true'\n\t\t\t\t\t\t\tonDragStart={props.onDragStart}\n\t\t\t\t\t\t\tonDragEnd={props.onDragEnd}\n\t\t\t\t\t\t\tthoughtContent={thg.thgContent}\n\t\t\t\t\t\t\tkey={thg.id}\n\t\t\t\t\t\t\tid={thg.id}\n\t\t\t\t\t\t\tonDelete={props.onDelete}\n\t\t\t\t\t\t\tparentId={props.id}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t<div className='add-button-thought'>\n\t\t\t\t\t<div className='plus-icon' onClick={() => setIsShown(true)}>\n\t\t\t\t\t\t+\n\t\t\t\t\t</div>{' '}\n\t\t\t\t\t<div>Add</div>\n\t\t\t\t</div>\n\n\t\t\t\t{isShown && (\n\t\t\t\t\t<form onSubmit={submitHandler}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='describe your thought'\n\t\t\t\t\t\t\tonChange={thoughtContentHandler}\n\t\t\t\t\t\t\tvalue={props.newThought}\n\t\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</form>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ThoughtCard;\n"]},"metadata":{},"sourceType":"module"}